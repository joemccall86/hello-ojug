buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id "com.avast.gradle.docker-compose" version "0.8.12"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

// Tell docker-compose that we need the docker-compose services to be ready
dockerCompose.isRequiredBy(bootRun)

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-mail')
    compile('javax.servlet:jstl')
	developmentOnly('org.springframework.boot:spring-boot-devtools')
	runtimeOnly('org.postgresql:postgresql')
    runtimeOnly('com.h2database:h2')
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
    providedRuntime('org.apache.tomcat.embed:tomcat-embed-jasper')
	testImplementation('org.testcontainers:postgresql:1.10.1')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.security:spring-security-test')
}
